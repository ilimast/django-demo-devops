name: CI - Code Build, Tests, Linting & Coverage

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    name: Code Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del Código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'

      - name: Instalar Dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Construcción de la Imagen Docker
        run: |
          docker build -t miusuario/django-app:latest .

  tests:
    name: Unit Tests & Code Coverage
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout del Código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'

      - name: Instalar Dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Ejecutar Pruebas Unitarias y Cobertura
        run: |
          pytest --cov=api --cov-report=xml
          
      - name: Subir Reporte de Cobertura a Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: true

  lint:
    name: Static Code Analysis (Flake8)
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout del Código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'

      - name: Instalar Dependencias
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Análisis Estático con Flake8
        run: |
          flake8 --max-line-length=120 --exclude=migrations
